# Locking

3.1. Two Main Types of Kernel Locks: Spinlocks and Semaphores

There are two main types of kernel locks. The fundamental type is the spinlock (include/asm/spinlock.h), which is a very simple single-holder lock: if you can't get the spinlock, you keep trying (spinning) until you can. Spinlocks are very small and fast, and can be used anywhere.

The second type is a semaphore (include/asm/semaphore.h): it can have more than one holder at any time (the number decided at initialization time), although it is most commonly used as a single-holder lock (a mutex). If you can't get a semaphore, your task will put itself on the queue, and be woken up when the semaphore is released. This means the CPU will do something else while you are waiting, but there are many cases when you simply can't sleep (see Chapter 9), and so have to use a spinlock instead.

Source: https://www.kernel.org/pub/linux/kernel/people/rusty/kernel-locking/c93.html

# Debugfs

Example: https://github.com/chadversary/debugfs-tutorial/blob/master/example1/debugfs_example1.c

Documentation: https://www.kernel.org/doc/Documentation/filesystems/debugfs.txt

# Jiffies

> The global variable jiffies holds the number of ticks that have occurred since the system booted. On boot, the kernel initializes the variable to zero, and it is incremented by one during each timer interrupt. Thus, because there are HZ timer interrupts in a second, there are HZ jiffies in a second. The system uptime is therefore jiffies/HZ seconds.

Source: http://www.makelinux.net/books/lkd2/ch10lev1sec3

# Submitting this task

## Configuring git-send-email for Gmail

My Ubuntu 14.04 host did not have the `git-email` plugin installed, so I had to do that first with:

```
sudo apt-get install -y git-email
```

Then adding the following entry to my `~/.gitconfig`:

```
[sendemail]
    from = Your Name <YOUREMAIL@gmail.com>
    smtpserver = smtp.gmail.com
    smtpuser = YOUREMAIL@gmail.com
    smtpencryption = tls
    # This can be your password or application password if you're using MFA
    # Omit this field to prompt for the passord
    smtppass = YOURPASSWORD
    chainreplyto = false
    smtpserverport = 587
```

###

## Sending the first email

Send as normal with `mutt -a task08.c -- little@eudyptula-challenge.org`. Record the Message-Id header for the patch emails.

## Sending the patches

The `-2` here just means to send the last two commits as patches. `--thread` and `--chain-reply-to` may be the defaults here, but I wanted to explicitly set them.

```
git send-email -2 --annotate --thread --chain-reply-to --in-reply-to --in-reply-to "<20161013155101.GA23181@box.example.xyz>" --to little@eudyptula-challenge.org
```
